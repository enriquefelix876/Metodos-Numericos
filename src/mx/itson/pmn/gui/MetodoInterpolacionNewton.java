/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mx.itson.pmn.gui;

import javax.swing.JTextField;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author enriq_000
 */
public class MetodoInterpolacionNewton extends javax.swing.JFrame {

    /**
     * Creates new form MetodoInterpolacionNewton
     */
    
    //Declaración de una matriz de tipo
    JTextField[][]campo = new JTextField[6][7];

    /**Declaración de la variable global n, que identifica la cantidad de 
     * puntos ingresados en la gráfica
    */
    int n;
    
    public MetodoInterpolacionNewton() {
        
        initComponents();
        
                //Método para centrar la ventana del Programa
        this.setLocationRelativeTo(null);
        
        //Aqui se agregan los JTextField a la matriz de JTextField
        campo[0][0]=campo00;
        campo[1][0]=campo10;
        campo[2][0]=campo20;
        campo[3][0]=campo30;
        campo[4][0]=campo40;
        campo[5][0]=campo50;
        
        campo[0][1]=campo01;
        campo[1][1]=campo11;
        campo[2][1]=campo21;
        campo[3][1]=campo31;
        campo[4][1]=campo41;
        campo[5][1]=campo51;
        
        campo[0][2]=campo02;
        campo[1][2]=campo12;
        campo[2][2]=campo22;
        campo[3][2]=campo32;
        campo[4][2]=campo42;

        campo[0][3]=campo03;
        campo[1][3]=campo13;
        campo[2][3]=campo23;
        campo[3][3]=campo33;
        
        campo[0][4]=campo04;
        campo[1][4]=campo14;
        campo[2][4]=campo24;
        
        campo[0][5]=campo05;
        campo[1][5]=campo15;
        
        campo[0][6]=campo06;
        
        n = 2;
        generarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelCampos = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        comboCantidad = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnAplicar = new javax.swing.JButton();
        campo00 = new javax.swing.JTextField();
        campo01 = new javax.swing.JTextField();
        campo10 = new javax.swing.JTextField();
        campo11 = new javax.swing.JTextField();
        campo20 = new javax.swing.JTextField();
        campo21 = new javax.swing.JTextField();
        campo30 = new javax.swing.JTextField();
        campo31 = new javax.swing.JTextField();
        campo40 = new javax.swing.JTextField();
        campo41 = new javax.swing.JTextField();
        campo50 = new javax.swing.JTextField();
        campo51 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnResolver = new javax.swing.JButton();
        campo02 = new javax.swing.JTextField();
        campo12 = new javax.swing.JTextField();
        campo22 = new javax.swing.JTextField();
        campo32 = new javax.swing.JTextField();
        campo42 = new javax.swing.JTextField();
        campo03 = new javax.swing.JTextField();
        campo13 = new javax.swing.JTextField();
        campo23 = new javax.swing.JTextField();
        campo33 = new javax.swing.JTextField();
        campo04 = new javax.swing.JTextField();
        campo14 = new javax.swing.JTextField();
        campo24 = new javax.swing.JTextField();
        campo06 = new javax.swing.JTextField();
        campo15 = new javax.swing.JTextField();
        campo05 = new javax.swing.JTextField();
        txtFormula = new javax.swing.JLabel();
        txtAproximacion = new javax.swing.JLabel();
        panelGrafica = new javax.swing.JPanel();
        btnInterpolacionNewton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Metodo Diferencias Divididas");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));
        jPanel1.setForeground(new java.awt.Color(102, 102, 255));

        panelCampos.setBackground(new java.awt.Color(255, 255, 255));
        panelCampos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Cantidad de Puntos");

        comboCantidad.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comboCantidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2", "3", "4", "5", "6" }));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("X");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Y");

        btnAplicar.setText("Aplicar");
        btnAplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAplicarActionPerformed(evt);
            }
        });

        campo00.setText("1");
        campo00.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo00ActionPerformed(evt);
            }
        });

        campo01.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        campo01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo01ActionPerformed(evt);
            }
        });

        campo10.setText("2");
        campo10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo10ActionPerformed(evt);
            }
        });

        campo11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo11ActionPerformed(evt);
            }
        });

        campo20.setText("3");
        campo20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo20ActionPerformed(evt);
            }
        });

        campo21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo21ActionPerformed(evt);
            }
        });

        campo30.setText("4");
        campo30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo30ActionPerformed(evt);
            }
        });

        campo31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo31ActionPerformed(evt);
            }
        });

        campo40.setText("5");
        campo40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo40ActionPerformed(evt);
            }
        });

        campo41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo41ActionPerformed(evt);
            }
        });

        campo50.setText("6");
        campo50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo50ActionPerformed(evt);
            }
        });

        campo51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo51ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("1");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("2");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("3");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("4");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("5");

        btnResolver.setText("Resolver");
        btnResolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResolverActionPerformed(evt);
            }
        });

        campo02.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        campo02.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo02ActionPerformed(evt);
            }
        });

        campo12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo12ActionPerformed(evt);
            }
        });

        campo22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo22ActionPerformed(evt);
            }
        });

        campo32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo32ActionPerformed(evt);
            }
        });

        campo42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo42ActionPerformed(evt);
            }
        });

        campo03.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        campo03.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo03ActionPerformed(evt);
            }
        });

        campo13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo13ActionPerformed(evt);
            }
        });

        campo23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo23ActionPerformed(evt);
            }
        });

        campo33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo33ActionPerformed(evt);
            }
        });

        campo04.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        campo04.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo04ActionPerformed(evt);
            }
        });

        campo14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo14ActionPerformed(evt);
            }
        });

        campo24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo24ActionPerformed(evt);
            }
        });

        campo06.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        campo06.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo06ActionPerformed(evt);
            }
        });

        campo15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo15ActionPerformed(evt);
            }
        });

        campo05.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        campo05.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo05ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelCamposLayout = new javax.swing.GroupLayout(panelCampos);
        panelCampos.setLayout(panelCamposLayout);
        panelCamposLayout.setHorizontalGroup(
            panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCamposLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelCamposLayout.createSequentialGroup()
                            .addComponent(campo20, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(campo21, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelCamposLayout.createSequentialGroup()
                                .addComponent(campo30, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(campo31))
                            .addGroup(panelCamposLayout.createSequentialGroup()
                                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(panelCamposLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18))
                                    .addComponent(campo00))
                                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelCamposLayout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelCamposLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(campo01, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCamposLayout.createSequentialGroup()
                                .addComponent(campo10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(campo11, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(btnResolver, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(panelCamposLayout.createSequentialGroup()
                            .addComponent(campo50, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(campo51, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panelCamposLayout.createSequentialGroup()
                            .addComponent(campo40, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(campo41, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelCamposLayout.createSequentialGroup()
                            .addComponent(comboCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnAplicar, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel2)))
                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelCamposLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campo42, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelCamposLayout.createSequentialGroup()
                                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campo22, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(campo32)
                                        .addComponent(campo02, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(campo12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campo23, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(campo33)
                                        .addComponent(campo03, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(campo13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campo24, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelCamposLayout.createSequentialGroup()
                                        .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(campo04, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(campo14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(campo05, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(campo15, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(panelCamposLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)))
                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCamposLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(campo06, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))
                    .addGroup(panelCamposLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        panelCamposLayout.setVerticalGroup(
            panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCamposLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCamposLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(comboCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCamposLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnAplicar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campo00, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campo01, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCamposLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelCamposLayout.createSequentialGroup()
                                .addComponent(campo02, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(campo12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(campo22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(campo32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelCamposLayout.createSequentialGroup()
                                .addComponent(campo04, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(campo14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campo06, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(37, 37, 37)
                                .addComponent(campo24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(37, 37, 37)
                        .addComponent(campo42, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelCamposLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelCamposLayout.createSequentialGroup()
                                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(campo10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campo11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(37, 37, 37)
                                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(campo20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campo21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(37, 37, 37)
                                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(campo30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campo31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(37, 37, 37)
                                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(campo41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campo40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panelCamposLayout.createSequentialGroup()
                                .addComponent(campo03, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelCamposLayout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(campo05, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(37, 37, 37)
                                        .addComponent(campo15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelCamposLayout.createSequentialGroup()
                                        .addComponent(campo13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(37, 37, 37)
                                        .addComponent(campo23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(37, 37, 37)
                                        .addComponent(campo33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campo50, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campo51, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(btnResolver)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        txtFormula.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtFormula.setText("Diferencias Divididas De Newton");

        txtAproximacion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtAproximacion.setText("Aproximación");

        panelGrafica.setBackground(new java.awt.Color(255, 255, 255));
        panelGrafica.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout panelGraficaLayout = new javax.swing.GroupLayout(panelGrafica);
        panelGrafica.setLayout(panelGraficaLayout);
        panelGraficaLayout.setHorizontalGroup(
            panelGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 798, Short.MAX_VALUE)
        );
        panelGraficaLayout.setVerticalGroup(
            panelGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        btnInterpolacionNewton.setBackground(new java.awt.Color(102, 102, 255));
        btnInterpolacionNewton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnInterpolacionNewton.setText("Menú Principal");
        btnInterpolacionNewton.setBorder(null);
        btnInterpolacionNewton.setBorderPainted(false);
        btnInterpolacionNewton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInterpolacionNewton.setOpaque(false);
        btnInterpolacionNewton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInterpolacionNewtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(panelCampos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAproximacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtFormula, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelGrafica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnInterpolacionNewton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 8, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtFormula)
                        .addGap(18, 18, 18)
                        .addComponent(txtAproximacion)
                        .addGap(18, 18, 18)
                        .addComponent(panelGrafica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnInterpolacionNewton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelCampos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

        /**
     * Este metodo pondrá visible todos los campos necesarios para poder 
     * ingresar valores de acuerdo al valor de la variable global n que se
     * obtiene al recibir su valor del comboBox que expresa el número de puntos
     */
    private void generarCampos(){
    
        //Se iguala n al valor obtenido de comboBox
        n = Integer.parseInt(comboCantidad.getSelectedItem().toString());
        
        //Se ponen ocultos todos los campos de texto momentaneamente
        for (int i = 0; i < 6; i++) {
            
            for (int j = 0; j < 2; j++) {
             
                campo[i][j].setEnabled(false);
            }
        }
        for (int i = 0; i < 5; i++) {
            
            campo[i][2].setEnabled(false);
        }
        
        for (int i = 0; i < 4; i++) {
            
            campo[i][3].setEnabled(false);
        }
        
        for (int i = 0; i < 3; i++) {
            
            campo[i][4].setEnabled(false);
        }
        for (int i = 0; i < 2; i++) {
            
            campo[i][5].setEnabled(false);
        }
        for (int i = 0; i < 1; i++) {
            
            campo[i][6].setEnabled(false);
        }
        /**
         * Se ponen visibles todos los campos necesarios para poder ingresar los
         * valores de n número de puntos
         */
        
        switch(n){
        
            case 2:
                for (int i = 0; i < n; i++) {
            
            for (int j = 0; j < 2; j++) {
                
                campo[i][j].setEnabled(true);
            }
        }
                campo[0][2].setEnabled(true);
                break;
                
            case 3:
                for (int i = 0; i < n; i++) {
            
            for (int j = 0; j < 2; j++) {
                
                campo[i][j].setEnabled(true);
            }
        }
                campo[0][2].setEnabled(true);
                campo[0][3].setEnabled(true);
                campo[1][2].setEnabled(true);
                break;
           
            case 4:
                for (int i = 0; i < n; i++) {
            
            for (int j = 0; j < 2; j++) {
                
                campo[i][j].setEnabled(true);
            }
        }
                campo[0][2].setEnabled(true);
                campo[0][3].setEnabled(true);
                campo[0][4].setEnabled(true);
                campo[1][2].setEnabled(true);
                campo[1][3].setEnabled(true);
                campo[2][2].setEnabled(true);
                break;
            
            case 5:
                for (int i = 0; i < n; i++) {
            
            for (int j = 0; j < 2; j++) {
                
                campo[i][j].setEnabled(true);
            }
        }
                campo[0][2].setEnabled(true);
                campo[0][3].setEnabled(true);
                campo[0][4].setEnabled(true);
                campo[1][2].setEnabled(true);
                campo[1][3].setEnabled(true);
                campo[2][2].setEnabled(true);
                campo[3][2].setEnabled(true);
                campo[2][3].setEnabled(true);
                campo[1][4].setEnabled(true);
                campo[0][5].setEnabled(true);
                break;
                
                case 6:
                for (int i = 0; i < n; i++) {
            
            for (int j = 0; j < 2; j++) {
                
                campo[i][j].setEnabled(true);
            }
        }
                campo[0][2].setEnabled(true);
                campo[0][3].setEnabled(true);
                campo[0][4].setEnabled(true);
                campo[1][2].setEnabled(true);
                campo[1][3].setEnabled(true);
                campo[2][2].setEnabled(true);
                campo[3][2].setEnabled(true);
                campo[2][3].setEnabled(true);
                campo[1][4].setEnabled(true);
                campo[0][5].setEnabled(true);
                campo[4][2].setEnabled(true);
                campo[3][3].setEnabled(true);
                campo[2][4].setEnabled(true);
                campo[1][5].setEnabled(true);
                campo[0][6].setEnabled(true);
                break;
                
        }
        
    }
    private void btnAplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAplicarActionPerformed

        //Invocación del metodo Generar Campos
        generarCampos();
    }//GEN-LAST:event_btnAplicarActionPerformed

    private void campo00ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo00ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo00ActionPerformed

    private void campo01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo01ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo01ActionPerformed

    private void campo10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo10ActionPerformed

    private void campo11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo11ActionPerformed

    private void campo20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo20ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo20ActionPerformed

    private void campo21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo21ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo21ActionPerformed

    private void campo30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo30ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo30ActionPerformed

    private void campo31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo31ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo31ActionPerformed

    private void campo40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo40ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo40ActionPerformed

    private void campo41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo41ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo41ActionPerformed

    private void campo50ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo50ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo50ActionPerformed

    private void campo51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo51ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo51ActionPerformed

     /**
     * Este metodo es el encargado de generar en pantalla la formula generada al
     * realizar el metodo de Aproximación polinomial por diferencia divididas
     * de Newton y la expresa a través de un JLabel
     */
    private void generarFormula(){
    
        /**
         * Se realizará la formula de acuerdo al número de puntos a analizar
         * para la realización del metodo de Aproximación polinomial por 
         * diferencia divididas de Newton
         */
        switch(n){
        
            case 2:
                
               /**
                * Se muestra la información en pantalla de acuerdo a la
                * información del triangulo generada por el metodo
                */
                txtFormula.setText("Pn(x) = "+campo01.getText()+"+"+campo02.getText()+"(x-"+campo00.getText()+")");
                
                //Formula Expandida
                double unidades = Double.parseDouble(campo01.getText())+
                        (Double.parseDouble(campo02.getText())*-Double.parseDouble(campo00.getText()));
                
                //Esta es la formula simplificada
                txtAproximacion.setText("Pn(x) = "+campo02.getText()+"x+"+unidades);
                
                break;
                
            case 3:
                
                txtFormula.setText("Pn(x) = "+campo01.getText()+"+"+campo02.getText()+"(x-"+campo00.getText()+")"
                +"+"+campo03.getText()+"(x-"+campo00.getText()+")"+"(x-"+campo10.getText()+")");
                txtAproximacion.setText(null);
                break;
            
            case 4:
                
                txtFormula.setText("Pn(x) = "+campo01.getText()+"+"+campo02.getText()+"(x-"+campo00.getText()+")"
                +"+"+campo03.getText()+"(x-"+campo00.getText()+")"+"(x-"+campo10.getText()+")+"
                +campo04.getText()+"(x-"+campo00.getText()+")"+"(x-"+campo10.getText()+")"+"(x-"+campo20.getText()+")");
                txtAproximacion.setText(null);
                break;
                
            case 5:
                
                txtFormula.setText("Pn(x) = "+campo01.getText()+"+"+campo02.getText()+"(x-"+campo00.getText()+")"
                +"+"+campo03.getText()+"(x-"+campo00.getText()+")"+"(x-"+campo10.getText()+")+"
                +campo04.getText()+"(x-"+campo00.getText()+")"+"(x-"+campo10.getText()+")"+"(x-"+campo20.getText()+")+"
                +campo05.getText()+"(x-"+campo00.getText()+")"+"(x-"+campo10.getText()+")"+"(x-"+campo20.getText()+")"
                +"(x-"+campo30.getText()+")");
                txtAproximacion.setText(null);
                
                break;
                
            case 6:
                
                txtFormula.setText("Pn(x) = "+campo01.getText()+"+"+campo02.getText()+"(x-"+campo00.getText()+")"
                +"+"+campo03.getText()+"(x-"+campo00.getText()+")"+"(x-"+campo10.getText()+")+"
                +campo04.getText()+"(x-"+campo00.getText()+")"+"(x-"+campo10.getText()+")"+"(x-"+campo20.getText()+")+"
                +campo05.getText()+"(x-"+campo00.getText()+")"+"(x-"+campo10.getText()+")"+"(x-"+campo20.getText()+")"
                +"(x-"+campo30.getText()+")+"+campo06.getText()+"(x-"+campo00.getText()+")"+"(x-"+campo10.getText()+")"
                +"(x-"+campo20.getText()+")"+"(x-"+campo30.getText()+")"+"(x-"+campo40.getText()+")");
                txtAproximacion.setText(null);
                
                break;
        }
    }
    
    /**
     * Este metodo sirve para generar el triangulo de valores generado a partir
     * de la realización del metodo de diferencias divididas de Newton
     */
    private void generarTrianguloValores(){
    
        try{
        switch(n){
        
            /**
             * Nota: Los coeficientes son generados a partir del primer valor 
             * de cada nivel del triangulo generado, con ese coeficiente se
             * realizarán las operaciones correspodientes
             * Nota 2: Se aplicarán distintos coeficientes de acuerdo al número
             * de datos dados
             */
            case 2:
                //Generación del campo 1,1
                coeficientes[0][0] = Double.parseDouble(campo11.getText())-Double.parseDouble(campo01.getText());
                coeficientes[0][0] /= Double.parseDouble(campo10.getText())-Double.parseDouble(campo00.getText());  
                
                campo02.setText(String.valueOf(String.format("%.2f", coeficientes[0][0])));
                break;
                
            case 3:
                //Generación del campo 1,1
                coeficientes[0][0] = Double.parseDouble(campo11.getText())-Double.parseDouble(campo01.getText());
                coeficientes[0][0] /= Double.parseDouble(campo10.getText())-Double.parseDouble(campo00.getText());
                campo02.setText(String.valueOf(String.format("%.2f", coeficientes[0][0])));
                
                //Generación del campo 1,2
                coeficientes[0][1] = Double.parseDouble(campo21.getText())-Double.parseDouble(campo11.getText());
                coeficientes[0][1] /= Double.parseDouble(campo20.getText())-Double.parseDouble(campo10.getText());
                campo12.setText(String.valueOf(String.format("%.2f", coeficientes[0][1])));
                
                //Generación del campo 2,1
                coeficientes[1][0] = Double.parseDouble(campo12.getText())-Double.parseDouble(campo02.getText());
                coeficientes[1][0] /= Double.parseDouble(campo20.getText())-Double.parseDouble(campo00.getText());
                campo03.setText(String.valueOf(String.format("%.2f", coeficientes[1][0])));
                break;
                
            case 4:
                //Generación del campo 1,1
                coeficientes[0][0] = Double.parseDouble(campo11.getText())-Double.parseDouble(campo01.getText());
                coeficientes[0][0] /= Double.parseDouble(campo10.getText())-Double.parseDouble(campo00.getText());
                campo02.setText(String.valueOf(String.format("%.2f", coeficientes[0][0])));
                
                //Generación del campo 1,2
                coeficientes[0][1] = Double.parseDouble(campo21.getText())-Double.parseDouble(campo11.getText());
                coeficientes[0][1] /= Double.parseDouble(campo20.getText())-Double.parseDouble(campo10.getText());
                campo12.setText(String.valueOf(String.format("%.2f", coeficientes[0][1])));
                
                //Generación del campo 1,3
                coeficientes[0][2] = Double.parseDouble(campo31.getText())-Double.parseDouble(campo21.getText());
                coeficientes[0][2] /= Double.parseDouble(campo30.getText())-Double.parseDouble(campo20.getText());
                campo22.setText(String.valueOf(String.format("%.2f", coeficientes[0][2])));
                
                //Generación del campo 2,1
                coeficientes[1][0] = Double.parseDouble(campo12.getText())-Double.parseDouble(campo02.getText());
                coeficientes[1][0] /= Double.parseDouble(campo20.getText())-Double.parseDouble(campo00.getText());
                campo03.setText(String.valueOf(String.format("%.2f", coeficientes[1][0])));
                
                //Generación del campo 2,2
                coeficientes[1][1] = Double.parseDouble(campo22.getText())-Double.parseDouble(campo12.getText());
                coeficientes[1][1] /= Double.parseDouble(campo30.getText())-Double.parseDouble(campo10.getText());
                campo13.setText(String.valueOf(String.format("%.2f", coeficientes[1][1])));
                
                
                //Generación del campo 3,1
                coeficientes[2][0] = Double.parseDouble(campo13.getText())-Double.parseDouble(campo03.getText());
                coeficientes[2][0] /= Double.parseDouble(campo30.getText())-Double.parseDouble(campo00.getText());
                campo04.setText(String.valueOf(String.format("%.2f", coeficientes[2][0])));
                
                break;

            case 5:
                
                //Generación del campo 1,1
                coeficientes[0][0] = Double.parseDouble(campo11.getText())-Double.parseDouble(campo01.getText());
                coeficientes[0][0] /= Double.parseDouble(campo10.getText())-Double.parseDouble(campo00.getText());
                campo02.setText(String.valueOf(String.format("%.2f", coeficientes[0][0])));
                
                //Generación del campo 1,2
                coeficientes[0][1] = Double.parseDouble(campo21.getText())-Double.parseDouble(campo11.getText());
                coeficientes[0][1] /= Double.parseDouble(campo20.getText())-Double.parseDouble(campo10.getText());
                campo12.setText(String.valueOf(String.format("%.2f", coeficientes[0][1])));
                
                //Generación del campo 1,3
                coeficientes[0][2] = Double.parseDouble(campo31.getText())-Double.parseDouble(campo21.getText());
                coeficientes[0][2] /= Double.parseDouble(campo30.getText())-Double.parseDouble(campo20.getText());
                campo22.setText(String.valueOf(String.format("%.2f", coeficientes[0][2])));
                
                //Generación del campo 1,4
                coeficientes[0][3] = Double.parseDouble(campo41.getText())-Double.parseDouble(campo31.getText());
                coeficientes[0][3] /= Double.parseDouble(campo40.getText())-Double.parseDouble(campo30.getText());
                campo32.setText(String.valueOf(String.format("%.2f", coeficientes[0][3])));
                
                
                //Generación del campo 2,1
                coeficientes[1][0] = Double.parseDouble(campo12.getText())-Double.parseDouble(campo02.getText());
                coeficientes[1][0] /= Double.parseDouble(campo20.getText())-Double.parseDouble(campo00.getText());
                campo03.setText(String.valueOf(String.format("%.2f", coeficientes[1][0])));
                
                //Generación del campo 2,2
                coeficientes[1][1] = Double.parseDouble(campo22.getText())-Double.parseDouble(campo12.getText());
                coeficientes[1][1] /= Double.parseDouble(campo30.getText())-Double.parseDouble(campo10.getText());
                campo13.setText(String.valueOf(String.format("%.2f", coeficientes[1][1])));
                
                //Generación del campo 2,3
                coeficientes[1][2] = Double.parseDouble(campo32.getText())-Double.parseDouble(campo22.getText());
                coeficientes[1][2] /= Double.parseDouble(campo40.getText())-Double.parseDouble(campo20.getText());
                campo23.setText(String.valueOf(String.format("%.2f", coeficientes[1][2])));
                
                //Generación del campo 3,1
                coeficientes[2][0] = Double.parseDouble(campo13.getText())-Double.parseDouble(campo03.getText());
                coeficientes[2][0] /= Double.parseDouble(campo30.getText())-Double.parseDouble(campo00.getText());
                campo04.setText(String.valueOf(String.format("%.2f", coeficientes[2][0])));
                
                //Generación del campo 3,2
                coeficientes[2][1] = Double.parseDouble(campo23.getText())-Double.parseDouble(campo13.getText());
                coeficientes[2][1] /= Double.parseDouble(campo40.getText())-Double.parseDouble(campo10.getText());
                campo14.setText(String.valueOf(String.format("%.2f", coeficientes[2][1])));
                
                //Generación del campo 4,1
                coeficientes[3][1] = Double.parseDouble(campo14.getText())-Double.parseDouble(campo04.getText());
                coeficientes[3][1] /= Double.parseDouble(campo40.getText())-Double.parseDouble(campo00.getText());
                campo05.setText(String.valueOf(String.format("%.2f", coeficientes[3][1])));
                
            case 6:
                
                //Generación del campo 1,1
                coeficientes[0][0] = Double.parseDouble(campo11.getText())-Double.parseDouble(campo01.getText());
                coeficientes[0][0] /= Double.parseDouble(campo10.getText())-Double.parseDouble(campo00.getText());
                campo02.setText(String.valueOf(String.format("%.2f", coeficientes[0][0])));
                
                //Generación del campo 1,2
                coeficientes[0][1] = Double.parseDouble(campo21.getText())-Double.parseDouble(campo11.getText());
                coeficientes[0][1] /= Double.parseDouble(campo20.getText())-Double.parseDouble(campo10.getText());
                campo12.setText(String.valueOf(String.format("%.2f", coeficientes[0][1])));
                
                //Generación del campo 1,3
                coeficientes[0][2] = Double.parseDouble(campo31.getText())-Double.parseDouble(campo21.getText());
                coeficientes[0][2] /= Double.parseDouble(campo30.getText())-Double.parseDouble(campo20.getText());
                campo22.setText(String.valueOf(String.format("%.2f", coeficientes[0][2])));
                
                //Generación del campo 1,4
                coeficientes[0][3] = Double.parseDouble(campo41.getText())-Double.parseDouble(campo31.getText());
                coeficientes[0][3] /= Double.parseDouble(campo40.getText())-Double.parseDouble(campo30.getText());
                campo32.setText(String.valueOf(String.format("%.2f", coeficientes[0][3])));
                
                //Generación del campo 1,5
                coeficientes[0][4] = Double.parseDouble(campo51.getText())-Double.parseDouble(campo41.getText());
                coeficientes[0][4] /= Double.parseDouble(campo50.getText())-Double.parseDouble(campo40.getText());
                campo42.setText(String.valueOf(String.format("%.2f", coeficientes[0][4])));
                
                //Generación del campo 2,1
                coeficientes[1][0] = Double.parseDouble(campo12.getText())-Double.parseDouble(campo02.getText());
                coeficientes[1][0] /= Double.parseDouble(campo20.getText())-Double.parseDouble(campo00.getText());
                campo03.setText(String.valueOf(String.format("%.2f", coeficientes[1][0])));
                
                //Generación del campo 2,2
                coeficientes[1][1] = Double.parseDouble(campo22.getText())-Double.parseDouble(campo12.getText());
                coeficientes[1][1] /= Double.parseDouble(campo30.getText())-Double.parseDouble(campo10.getText());
                campo13.setText(String.valueOf(String.format("%.2f", coeficientes[1][1])));
                
                //Generación del campo 2,3
                coeficientes[1][2] = Double.parseDouble(campo32.getText())-Double.parseDouble(campo22.getText());
                coeficientes[1][2] /= Double.parseDouble(campo40.getText())-Double.parseDouble(campo20.getText());
                campo23.setText(String.valueOf(String.format("%.2f", coeficientes[1][2])));
                
                //Generación del campo 2,4
                coeficientes[1][3] = Double.parseDouble(campo42.getText())-Double.parseDouble(campo32.getText());
                coeficientes[1][3] /= Double.parseDouble(campo50.getText())-Double.parseDouble(campo30.getText());
                campo33.setText(String.valueOf(String.format("%.2f", coeficientes[1][3])));
                
                //Generación del campo 3,1
                coeficientes[2][0] = Double.parseDouble(campo13.getText())-Double.parseDouble(campo03.getText());
                coeficientes[2][0] /= Double.parseDouble(campo30.getText())-Double.parseDouble(campo00.getText());
                campo04.setText(String.valueOf(String.format("%.2f", coeficientes[2][0])));
                
                //Generación del campo 3,2
                coeficientes[2][1] = Double.parseDouble(campo23.getText())-Double.parseDouble(campo13.getText());
                coeficientes[2][1] /= Double.parseDouble(campo40.getText())-Double.parseDouble(campo10.getText());
                campo14.setText(String.valueOf(String.format("%.2f", coeficientes[2][1])));
                
                //Generación del campo 3,3
                coeficientes[2][2] = Double.parseDouble(campo33.getText())-Double.parseDouble(campo23.getText());
                coeficientes[2][2] /= Double.parseDouble(campo50.getText())-Double.parseDouble(campo20.getText());
                campo24.setText(String.valueOf(String.format("%.2f", coeficientes[2][2])));
                
                //Generación del campo 4,1
                coeficientes[3][1] = Double.parseDouble(campo14.getText())-Double.parseDouble(campo04.getText());
                coeficientes[3][1] /= Double.parseDouble(campo40.getText())-Double.parseDouble(campo00.getText());
                campo05.setText(String.valueOf(String.format("%.2f", coeficientes[3][1])));
                
                //Generación del campo 4,2
                coeficientes[3][2] = Double.parseDouble(campo24.getText())-Double.parseDouble(campo14.getText());
                coeficientes[3][2] /= Double.parseDouble(campo50.getText())-Double.parseDouble(campo10.getText());
                campo15.setText(String.valueOf(String.format("%.2f", coeficientes[3][2])));
                
                //Generación del campo 5,1
                coeficientes[4][1] = Double.parseDouble(campo15.getText())-Double.parseDouble(campo05.getText());
                coeficientes[4][1] /= Double.parseDouble(campo50.getText())-Double.parseDouble(campo00.getText());
                campo06.setText(String.valueOf(String.format("%.2f", coeficientes[4][1])));
        }
        }catch(Exception e){
            generarGrafica();
        }
            generarGrafica();
    }
    
     /**
      * Este metodo se encargará de generar una gráfica a partir de los valores
      * de f(x) a partir de la formula generada de la realización del método de
      * diferencias divididas de Newton
      */
    private void generarGrafica(){
    
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        /**
         * Se declaran los valores de a para ser utilizados para sumar y obtener 
         * los valores de f(x) y poder graficarlos 
         */
        
        double a0;
        double a1;
        double a2;
        double a3;
        double a4;
        double a5;
        
        for (int i = 0; i < n; i++) {

            //Se aplicará la formula de acuerdo al número de puntos [2-6]
            switch(n){
            
                /**
                 * Los valores serán obtenidos tomandolos del triangulo de 
                 * valores generados en los JTextField
                 */
                case 2:
                    
                    a0 = Double.parseDouble(campo01.getText());
                    
                    a1 = Double.parseDouble(campo02.getText())*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo00.getText()));
                    
                    dataset.addValue(a0+a1, "Aproimación generada por Metodo Diferencias divididas de Newton", 
                        "" + Double.parseDouble(campo[i][0].getText()));
                    break;
                    
                case 3:
                    
                    a0 = Double.parseDouble(campo01.getText());
                    
                    a1 = Double.parseDouble(campo02.getText())*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo00.getText()));
                    
                    a2 = Double.parseDouble(campo03.getText())*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo00.getText()))*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo10.getText()));
                    
                    dataset.addValue(a0+a1+a2, "Aproimación generada por Metodo Diferencias divididas de Newton", 
                        "" + Double.parseDouble(campo[i][0].getText()));
                    break;
                    
                case 4:
                    
                    a0 = Double.parseDouble(campo01.getText());
                    
                    a1 = Double.parseDouble(campo02.getText())*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo00.getText()));
                    
                    a2 = Double.parseDouble(campo03.getText())*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo00.getText()))*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo10.getText()));
                    
                    a3 = Double.parseDouble(campo04.getText())*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo00.getText()))*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo10.getText()))*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo20.getText()));
                    
                    dataset.addValue(a0+a1+a2+a3, "Aproimación generada por Metodo Diferencias divididas de Newton", 
                        "" + Double.parseDouble(campo[i][0].getText()));
                    break;
                    
                    case 5:
                    
                    a0 = Double.parseDouble(campo01.getText());
                    
                    a1 = Double.parseDouble(campo02.getText())*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo00.getText()));
                    
                    a2 = Double.parseDouble(campo03.getText())*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo00.getText()))*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo10.getText()));
                    
                    a3 = Double.parseDouble(campo04.getText())*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo00.getText()))*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo10.getText()))*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo20.getText()));
                    
                    a4 = Double.parseDouble(campo05.getText())*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo00.getText()))*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo10.getText()))*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo20.getText()))*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo30.getText()));
                    
                    dataset.addValue(a0+a1+a2+a3+a4, "Aproimación generada por Metodo Diferencias divididas de Newton", 
                        "" + Double.parseDouble(campo[i][0].getText()));
                    
                    break;
                    
                    case 6:
                    
                    a0 = Double.parseDouble(campo01.getText());
                    
                    a1 = Double.parseDouble(campo02.getText())*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo00.getText()));
                    
                    a2 = Double.parseDouble(campo03.getText())*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo00.getText()))*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo10.getText()));
                    
                    a3 = Double.parseDouble(campo04.getText())*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo00.getText()))*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo10.getText()))*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo20.getText()));
                    
                    a4 = Double.parseDouble(campo05.getText())*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo00.getText()))*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo10.getText()))*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo20.getText()))*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo30.getText()));
                    
                    a5 = Double.parseDouble(campo06.getText())*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo00.getText()))*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo10.getText()))*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo20.getText()))*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo30.getText()))*(Double.parseDouble(campo[i][0].getText())
                            -Double.parseDouble(campo40.getText()));
                    
                    dataset.addValue(a0+a1+a2+a3+a4+a5, "Aproimación generada por Metodo Diferencias divididas de Newton", 
                        "" + Double.parseDouble(campo[i][0].getText()));
                    
                    break;                   

            }
            
        }

        JFreeChart chart = ChartFactory.createLineChart(
                "Grafica Aproximación Polinomial Newton",
                "X",
                "Y",
                dataset,
                PlotOrientation.VERTICAL,
                true,
                false,
                false
        );

        //Mostramos la grafica en pantalla
        ChartPanel panel = new ChartPanel(chart);        
        panelGrafica.setLayout(new java.awt.BorderLayout());
        panelGrafica.add(panel);   
        panelGrafica.validate();
    }
    double[][]coeficientes;
    
    /**
     * Este botón basicamente llama a los métodos necesarios para la resolución
     * del problema
     * @param evt 
     */
    private void btnResolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResolverActionPerformed

        coeficientes = new double[n-1][n-1];

        generarTrianguloValores();
        generarFormula();
    }//GEN-LAST:event_btnResolverActionPerformed

    private void campo02ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo02ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo02ActionPerformed

    private void campo12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo12ActionPerformed

    private void campo22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo22ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo22ActionPerformed

    private void campo32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo32ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo32ActionPerformed

    private void campo42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo42ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo42ActionPerformed

    private void campo03ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo03ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo03ActionPerformed

    private void campo13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo13ActionPerformed

    private void campo23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo23ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo23ActionPerformed

    private void campo33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo33ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo33ActionPerformed

    private void campo04ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo04ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo04ActionPerformed

    private void campo14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo14ActionPerformed

    private void campo24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo24ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo24ActionPerformed

    private void campo06ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo06ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo06ActionPerformed

    private void campo15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo15ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo15ActionPerformed

    private void campo05ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo05ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo05ActionPerformed

    private void btnInterpolacionNewtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInterpolacionNewtonActionPerformed

        MenuPrincipal mp = new MenuPrincipal();
        mp.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnInterpolacionNewtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAplicar;
    private javax.swing.JButton btnInterpolacionNewton;
    private javax.swing.JButton btnResolver;
    private javax.swing.JTextField campo00;
    private javax.swing.JTextField campo01;
    private javax.swing.JTextField campo02;
    private javax.swing.JTextField campo03;
    private javax.swing.JTextField campo04;
    private javax.swing.JTextField campo05;
    private javax.swing.JTextField campo06;
    private javax.swing.JTextField campo10;
    private javax.swing.JTextField campo11;
    private javax.swing.JTextField campo12;
    private javax.swing.JTextField campo13;
    private javax.swing.JTextField campo14;
    private javax.swing.JTextField campo15;
    private javax.swing.JTextField campo20;
    private javax.swing.JTextField campo21;
    private javax.swing.JTextField campo22;
    private javax.swing.JTextField campo23;
    private javax.swing.JTextField campo24;
    private javax.swing.JTextField campo30;
    private javax.swing.JTextField campo31;
    private javax.swing.JTextField campo32;
    private javax.swing.JTextField campo33;
    private javax.swing.JTextField campo40;
    private javax.swing.JTextField campo41;
    private javax.swing.JTextField campo42;
    private javax.swing.JTextField campo50;
    private javax.swing.JTextField campo51;
    private javax.swing.JComboBox<String> comboCantidad;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel panelCampos;
    private javax.swing.JPanel panelGrafica;
    private javax.swing.JLabel txtAproximacion;
    private javax.swing.JLabel txtFormula;
    // End of variables declaration//GEN-END:variables
}
