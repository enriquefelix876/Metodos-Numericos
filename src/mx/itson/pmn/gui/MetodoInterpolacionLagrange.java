/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mx.itson.pmn.gui;

import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author enriq_000
 */
public class MetodoInterpolacionLagrange extends javax.swing.JFrame {

    /**
     * Creates new form MetodoInterpolacionLagrange
     */
    
        /**Declaración de la variable global n, que identifica la cantidad de 
    * puntos dados
    */
    static int n;
    
    //Declaración de una matriz de tipo
    JTextField[][]campo = new JTextField[6][2];
    
    DefaultTableModel modelo = new DefaultTableModel();
    DefaultTableModel modelo2 = new DefaultTableModel();
    
    public MetodoInterpolacionLagrange() {
        
        initComponents();
        
        this.setLocationRelativeTo(null);
        modelo.addColumn("X");
        modelo.addColumn("Aprox");
        tablaValores.setModel(modelo);
        
        modelo2.addColumn("X");
        modelo2.addColumn("Y");
        tabla.setModel(modelo2);
        
        //Se inicia n en 2 para iniciar la tabla con 2 campos
        n = 2;
        
        //Datos Asignados previamente (Se pueden editar)
        String []xyInicio = {"1","1"};
        modelo2.addRow(xyInicio);
        String []xyInicio2 = {"2","2"};
        modelo2.addRow(xyInicio2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnResolver = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaValores = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        panelGrafica = new javax.swing.JPanel();
        btnMenu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelPrincipal.setBackground(new java.awt.Color(102, 102, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Cantidad de Puntos");

        btnResolver.setText("Resolver");
        btnResolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResolverActionPerformed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tabla);

        btnAgregar.setText("Agregar Punto");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnBorrar.setText("Borrar Datos");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnResolver, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel2))
                    .addComponent(btnBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel2)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAgregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnResolver)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBorrar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tablaValores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablaValores);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Aproximaciones generadas");

        panelGrafica.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout panelGraficaLayout = new javax.swing.GroupLayout(panelGrafica);
        panelGrafica.setLayout(panelGraficaLayout);
        panelGraficaLayout.setHorizontalGroup(
            panelGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 840, Short.MAX_VALUE)
        );
        panelGraficaLayout.setVerticalGroup(
            panelGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        btnMenu.setBackground(new java.awt.Color(102, 102, 255));
        btnMenu.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnMenu.setText("Menú Principal");
        btnMenu.setBorder(null);
        btnMenu.setBorderPainted(false);
        btnMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMenu.setOpaque(false);
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(btnMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelGrafica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel5)
                        .addGap(27, 27, 27)
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelGrafica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(panelPrincipalLayout.createSequentialGroup()
                                .addComponent(jScrollPane1)
                                .addGap(18, 18, 18)
                                .addComponent(btnMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    static Double[][]datos;
    
    /**
     * Este metodo es el encargado de capturar cada unos de los valores de X y Y 
     * de la tabla de asignación de los puntos y guardarlos en una matriz XY
     */
    private void generarXY(){
        
        n = modelo2.getRowCount();
        
        datos = new Double[n][2];

        for(int i=0; i<n; i++){
            
            datos[i][0] = Double.parseDouble(modelo2.getValueAt(i, 0).toString());
            datos[i][1] = Double.parseDouble(modelo2.getValueAt(i, 1).toString());
            
      }
    }
  
  /**
   * Este metodo es el encargado de generar la formula que se utiliza para
   * obtener los valores de y en función de la X que recibe de parametro.
   * @param x El valor obtenido dependerá directamente de la x recibida como 
   * parametro
   * @return El valor de f(x)
   */
  private double calcularFDeX(double x){

   //Se inicia la sumatoria en 0
   double suma=0.0;
   
   for(int i=0; i<n; i++){
       
        //Se hace la sumatoria de cada uno de los valores de X por el valor 
        //generado al aplicar el metodo para la obtención de factores por Indice
        //Referencia: Metodo factores, linea 325
	suma += (datos[i][1])*(factores(i,x));
        
      }
   return suma;
  }
  
  /**
   * Este metodo es el encargado de generar el producto de cada indice evaluado
   * que se multiplcará por la a evaluada
   * @param i Indice de la a evaluada
   * @param x valor de la incognita X
   * @return el factor del indice evaluado que se multiplicada por a
   */
  private double factores(int i,double x){
      
     double factor=1;
     
     for(int j=0; j<n; j++){
         
     	  if(i!=j){
              
     	  factor *= (x-datos[j][0])/(datos[i][0]-datos[j][0]);	
          
          }
     	}
     
    return factor;
  }
 
  /**
   * Metodo encargado de limpiar las tablas para el ingreso de valores nuevos
   * @param modeloTabla 
   */
   private void limpiarTabla(DefaultTableModel modeloTabla){
    
        int filas = modeloTabla.getRowCount();
            
            for (int i = 0;filas>i; i++) {
                
                modeloTabla.removeRow(0);
            }
   }
   
     /**
     * Este metodo generá un gráfica de las aproximaciones de Y usando la 
     * Libreria JFreeChart al dar click en el botón Aceptar
     */
    private void generarGrafica(){
    
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        //Se van agregandos los elementos de Y en funcion de la función obtenida
        //por el metodo de interpolación de Lagrange
        for (int i = 1; i < 11; i++) {

            //Puntos dados previamente
            dataset.addValue(calcularFDeX(i), "Aproximación generada por Metodo Lagrange", "" + i);

        }

        JFreeChart chart = ChartFactory.createLineChart(
                "Grafica Metodo Interpolación Lagrange",
                "X1",
                "Y",
                dataset,
                PlotOrientation.VERTICAL,
                true,
                false,
                false
        );

        //Mostramos la grafica en pantalla
        ChartPanel panel = new ChartPanel(chart);        
        panelGrafica.setLayout(new java.awt.BorderLayout());
        panelGrafica.add(panel);   
        panelGrafica.validate();
    }
    private void btnResolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResolverActionPerformed

        try{

            generarXY();

            String[]datosTabla = new String[2];

            limpiarTabla(modelo);

            for (int i = 0; i < 11; i++) {

                datosTabla[0] = String.valueOf(i);

                datosTabla[1] = String.format("%.2f", calcularFDeX(i));
                modelo.addRow(datosTabla);
                generarGrafica();
            }
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Asegurese de Llenar todos los campos con valores numericos");
        }

    }//GEN-LAST:event_btnResolverActionPerformed

     /**
     * Metodo encargado de agregar un punto a la tabla de asignación de puntos
     * @param evt del botón Agregar Punto
     */
    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed

        String[]xy = {"",""};
        modelo2.addRow(xy);
        
    }//GEN-LAST:event_btnAgregarActionPerformed

     /**
     * Este metodo es el encargado de borrar todos los valores de la tabla de 
     * asignación de puntos y la tabla de las Y generadas por el metodo de 
     * Interpolación de Lagrange para realizar otra operación
     * @param evt del botón Borrar Datos
     */
    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed

        int filas = modelo2.getRowCount();

        for (int i = 0;filas>i; i++) {

            modelo2.removeRow(0);
        }

        int filas2 = modelo.getRowCount();

        for (int i = 0;filas2>i; i++) {

            modelo.removeRow(0);
        }
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed

        MenuPrincipal mp = new MenuPrincipal();
        mp.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_btnMenuActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnMenu;
    private javax.swing.JButton btnResolver;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panelGrafica;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JTable tabla;
    private javax.swing.JTable tablaValores;
    // End of variables declaration//GEN-END:variables
}
